#!/usr/bin/env bash

# This is a shell script to cluster a fasta file of sequences into OTUs using usearch.
# works for usearch v8.0.1623_i86osx32
# It requires one and only one argument: The absolute path to a fasta file to be clustered.
# This file should contain only unique sequences - no duplicates.

# example usage: bash cluster_usearch.sh "/Users/threeprime/Desktop/Analysis_20150727_0004/all_lib/no_duplicates.fasta"

# "${1}" is the first argument
infile="${1}"

# percent similarity within which two sequences will be clustered into an OTU
# cluster_radius=1

# define output files (these will be in the same directory as the infile)
OTU_dir="${infile%/*}"/OTUs_usearch
mkdir "${OTU_dir}"
OTU_fasta="${OTU_dir}"/OTUs.fasta
OTU_fasta_linebreak="${OTU_dir}"/OTUs_linebreaks.fasta
# logfile="${OTU_dir}"/OTUs.log
out_uc="${OTU_dir}"/OTUs.uc
dup_otu_map="${OTU_dir}"/dups_to_otus.csv
BLAST_INPUT="${OTU_fasta}"
OTU_table="${OTU_dir}"/OTU_table.csv


# this will automatically find the number of cores on a Unix/Linux computer
n_cores=$(getconf _NPROCESSORS_ONLN)

# write logfile
# exec > >(tee "${logfile}") 2>&1

# execute usearch
usearch \
	-cluster_otus "${infile}" \
	-otu_radius_pct "${cluster_radius}" \
	-sizein \
	-sizeout \
	-otus "${OTU_fasta_linebreak}" \
	-uparseout "${out_uc}"
	# -relabel OTU_ \


# after usearch, check if there was an error:
usearch_exit_status=$( echo $? )
if [[ "${usearch_exit_status}" = 1 ]]; then
  echo 'usearch exited with an error -- something went wrong!'
  echo 'Aborting script.'
  exit
fi

# remove the annoying line breaks
echo $(date +%H:%M) "Removing line breaks within fasta sequences generated by usearch (awk)..."
awk '/^>/{print (NR==1)?$0:"\n"$0;next}{printf "%s", $0}END{print ""}' "${OTU_fasta_linebreak}" > "${OTU_fasta}"


################################################################################
# RESOLVE OTUS AND DUPLICATES
################################################################################
# Note that this drops sequences determined to be chimeras by usearch
awk -F'[\t;]' 'BEGIN{ print "Query,Match" } { if ($4 == "otu") {print $1 "," $1} else if ($4 == "match") { print $1 "," $7 } else if ($4 == "chimera") { print $1 "," "chimera"} }' "${out_uc}" > "${dup_otu_map}"
